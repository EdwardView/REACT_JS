{"ast":null,"code":"var _jsxFileName = \"/home/edward/projects/REACT.JS/React_Base_Syntax/src/App.js\";\n\n/*\n          Create TWO new components: UserInput and UserOutput \n          UserInput should hold an input element, UserOutput two paragraphs \n          Output multiple UserOutput components in the App component (any paragraph texts of your choice) \n          Pass a username (of your choice) to UserOutput via props and display it there \n          Add state to the App component (=> the username) and pass the username to the UserOutput component \n          Add a method to manipulate the state (=> an event-handler method) \n          Pass the event-handler method reference to the UserInput component and bind it to the input-change event \n          Ensure that the new input entered by the user overwrites the old username passed to UserOutput \n          Add two-way-binding to your input (in UserInput) to also display the starting username \n          Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets \n*/\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport UserInput from \"./userInput/userInput\";\nimport UserOutput from \"./userOutput/userOutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userName: \"CraterZone\"\n    };\n\n    this.switchNameHanlder = setName => {\n      this.setState({\n        userName: setName\n      });\n    };\n\n    this.userNameChangedHandler = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(UserInput, {\n        changed: this.userNameChangedHandler,\n        currenName: this.state.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n        changed: this.switchNameHanlder,\n        userName: this.state.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n        changed: this.switchNameHanlder,\n        userName: this.state.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n        changed: this.switchNameHanlder,\n        userName: this.state.userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UserOutput, {\n        changed: this.switchNameHanlder,\n        userName: \"CZ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/home/edward/projects/REACT.JS/React_Base_Syntax/src/App.js"],"names":["React","Component","UserInput","UserOutput","App","state","userName","switchNameHanlder","setName","setState","userNameChangedHandler","event","target","value","render"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AAEA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,OAAO,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACjCI,KADiC,GACzB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KADyB;;AAAA,SAKjCC,iBALiC,GAKZC,OAAD,IAAa;AAC/B,WAAKC,QAAL,CAAc;AACZH,QAAAA,QAAQ,EAAEE;AADE,OAAd;AAGD,KATgC;;AAAA,SAWjCE,sBAXiC,GAWPC,KAAD,IAAW;AAClC,WAAKF,QAAL,CAAc;AAAEH,QAAAA,QAAQ,EAAEK,KAAK,CAACC,MAAN,CAAaC;AAAzB,OAAd;AACD,KAbgC;AAAA;;AAejCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,OAAO,EAAE,KAAKJ,sBADhB;AAEE,QAAA,UAAU,EAAE,KAAKL,KAAL,CAAWC;AAFzB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKC,iBADhB;AAEE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAFvB;AAAA;AAAA;AAAA;AAAA,cALF,eAUE,QAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKC,iBADhB;AAEE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAFvB;AAAA;AAAA;AAAA;AAAA,cAVF,eAeE,QAAC,UAAD;AACE,QAAA,OAAO,EAAE,KAAKC,iBADhB;AAEE,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWC;AAFvB;AAAA;AAAA;AAAA;AAAA,cAfF,eAoBE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,KAAKC,iBAA1B;AAA6C,QAAA,QAAQ,EAAE;AAAvD;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAxCgC;AA2CnC,eAAeH,GAAf","sourcesContent":["/*\n          Create TWO new components: UserInput and UserOutput \n          UserInput should hold an input element, UserOutput two paragraphs \n          Output multiple UserOutput components in the App component (any paragraph texts of your choice) \n          Pass a username (of your choice) to UserOutput via props and display it there \n          Add state to the App component (=> the username) and pass the username to the UserOutput component \n          Add a method to manipulate the state (=> an event-handler method) \n          Pass the event-handler method reference to the UserInput component and bind it to the input-change event \n          Ensure that the new input entered by the user overwrites the old username passed to UserOutput \n          Add two-way-binding to your input (in UserInput) to also display the starting username \n          Add styling of your choice to your components/ elements in the components - both with inline styles and stylesheets \n*/\n\n\nimport React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport UserInput from \"./userInput/userInput\";\nimport UserOutput from \"./userOutput/userOutput\";\n\nexport class App extends Component {\n  state = {\n    userName: \"CraterZone\",\n  };\n\n  switchNameHanlder = (setName) => {\n    this.setState({\n      userName: setName,\n    });\n  };\n\n  userNameChangedHandler = (event) => {\n    this.setState({ userName: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <UserInput\n          changed={this.userNameChangedHandler}\n          currenName={this.state.userName}\n        />\n        <UserOutput\n          changed={this.switchNameHanlder}\n          userName={this.state.userName}\n        />\n\n        <UserOutput\n          changed={this.switchNameHanlder}\n          userName={this.state.userName}\n        />\n\n        <UserOutput\n          changed={this.switchNameHanlder}\n          userName={this.state.userName}\n        />\n\n        <UserOutput changed={this.switchNameHanlder} userName={\"CZ\"} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}